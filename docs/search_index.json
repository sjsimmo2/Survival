[["extras.html", "Chapter 6 Extras 6.1 Using Lasso 6.2 Decision Trees 6.3 Random Forest", " Chapter 6 Extras 6.1 Using Lasso library(glmnet) ## Loading required package: Matrix ## Loaded glmnet 4.1-4 x=recid %&gt;% select(fin,age,wexp,mar,paro,prio,educ) y=Surv(time=recid$week,event=recid$arrest) model1&lt;-glmnet(x,y,family=&quot;cox&quot;) plot(model1) x&lt;-as.matrix(x) set.seed(1287) cvfit &lt;- cv.glmnet(x, y, family = &quot;cox&quot;, type.measure = &quot;C&quot;) plot(cvfit) plot(cvfit) cvfit$lambda.min ## [1] 0.003406689 cvfit$lambda.1se ## [1] 0.03826816 coef(model1,s=0.0034) ## 7 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## 1 ## fin -0.31919982 ## age -0.05311820 ## wexp -0.12614240 ## mar -0.41791871 ## paro -0.05465912 ## prio 0.08103017 ## educ -0.15813778 coef(model1,s=0.04) ## 7 x 1 sparse Matrix of class &quot;dgCMatrix&quot; ## 1 ## fin -0.050585250 ## age -0.029250304 ## wexp -0.079213286 ## mar -0.002845972 ## paro . ## prio 0.053625710 ## educ -0.016574761 ### Uses Breslow for ties (not able to do Efron...yet) Can also do repeated events and stratified analysis, see https://glmnet.stanford.edu/articles/Coxnet.html. 6.2 Decision Trees library(rpart) library(partykit) ## Loading required package: grid ## Loading required package: libcoin ## Loading required package: mvtnorm data(&quot;GBSG2&quot;, package = &quot;TH.data&quot;) tree.surv&lt;- ctree(Surv(time,cens) ~ . ,data=GBSG2) tree.surv ## ## Model formula: ## Surv(time, cens) ~ horTh + age + menostat + tsize + tgrade + ## pnodes + progrec + estrec ## ## Fitted party: ## [1] root ## | [2] pnodes &lt;= 3 ## | | [3] horTh in no: 2093.000 (n = 248) ## | | [4] horTh in yes: Inf (n = 128) ## | [5] pnodes &gt; 3 ## | | [6] progrec &lt;= 20: 624.000 (n = 144) ## | | [7] progrec &gt; 20: 1701.000 (n = 166) ## ## Number of inner nodes: 3 ## Number of terminal nodes: 4 plot(tree.surv) predict(tree.surv, newdata = GBSG2[1:2,], type = &quot;node&quot;) ## 1 2 ## 3 7 predict(tree.surv, newdata = GBSG2[1:2,], type = &quot;response&quot;) ## 1 2 ## 2093 1701 This is using conditional trees in the partykit package in R. 6.3 Random Forest library(randomForestSRC) ## ## randomForestSRC 3.1.1 ## ## Type rfsrc.news() to see new features, changes, and bug fixes. ## ## ## Attaching package: &#39;randomForestSRC&#39; ## The following object is masked from &#39;package:Hmisc&#39;: ## ## impute library(ggRandomForests) ## Loading required package: randomForest ## randomForest 4.7-1 ## Type rfNews() to see new features/changes/bug fixes. ## ## Attaching package: &#39;randomForest&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## combine ## The following object is masked from &#39;package:ggplot2&#39;: ## ## margin surv.rf &lt;- rfsrc(Surv(time,cens) ~ . ,data=GBSG2,importance = TRUE) plot.survival(surv.rf, subset = 1:10) print(surv.rf$importance) ## horTh age menostat tsize tgrade pnodes ## 0.0132128712 0.1078447263 0.0007029462 0.0271485393 0.0154404019 0.1647260566 ## progrec estrec ## 0.0820080064 0.0294435264 For more information, see https://www.randomforestsrc.org/articles/survival.html, https://www.randomforestsrc.org/index.html for the Survival Random Forest or https://cran.microsoft.com/snapshot/2014-12-19/web/packages/ggRandomForests/vignettes/randomForestSurvival.pdf for nice visuals using the ggRandomForest package. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
